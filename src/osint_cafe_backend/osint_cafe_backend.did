type CafeWallet = record {
  "principal" : principal;
  "nickname" : opt text;
  "icp_balance" : nat64;
  "trust_score" : nat32;
  "safety_rating" : text;
  "created_at" : nat64;
  "last_activity" : nat64;
  "total_spent" : nat64;
  "spending_patterns" : SpendingPatterns;
  "emergency_contacts" : vec principal;
  "privacy_settings" : PrivacySettings;
};

type SpendingPatterns = record {
  "emotional_state_tags" : vec record { text; nat64 };
  "daily_limit" : nat64;
  "warning_threshold" : nat64;
  "cooling_off_period" : nat64;
  "last_large_purchase" : opt nat64;
};

type PrivacySettings = record {
  "share_trust_score" : bool;
  "allow_trust_connections" : bool;
  "public_nickname" : bool;
  "emergency_mode" : bool;
};

type SpendingRecord = record {
  "id" : text;
  "amount" : nat64;
  "emotional_tag" : text;
  "transaction_type" : text;
  "risk_assessment" : text;
  "timestamp" : nat64;
  "notes" : opt text;
  "flagged_suspicious" : bool;
};

type TrustConnection = record {
  "connected_principal" : principal;
  "connection_type" : text;
  "trust_level" : nat32;
  "established_at" : nat64;
  "last_interaction" : nat64;
  "mutual_verification" : bool;
  "emergency_contact" : bool;
};

type SafetyAlert = record {
  "id" : text;
  "alert_type" : text;
  "severity" : text;
  "message" : text;
  "triggered_at" : nat64;
  "acknowledged" : bool;
  "related_transaction" : opt text;
};

type WalletStats = record {
  "total_wallets" : nat64;
  "total_transactions" : nat64;
  "scams_prevented" : nat64;
  "total_trust_connections" : nat64;
  "last_updated" : nat64;
};

type SpendingAnalysis = record {
  "total_spent" : nat64;
  "total_transactions" : nat64;
  "high_risk_transactions" : nat64;
  "risk_percentage" : nat32;
  "most_emotional_tag" : text;
  "safety_rating" : text;
  "trust_score" : nat32;
  "recommendations" : vec text;
};

type Result = variant { Ok : text; Err : text };
type WalletResult = variant { Ok : CafeWallet; Err : text };
type SpendingHistoryResult = variant { Ok : vec SpendingRecord; Err : text };
type SafetyAlertsResult = variant { Ok : vec SafetyAlert; Err : text };
type TrustConnectionsResult = variant { Ok : vec TrustConnection; Err : text };
type SpendingAnalysisResult = variant { Ok : SpendingAnalysis; Err : text };

service : {
  get_my_wallet : () -> (WalletResult) query;
  create_wallet : (opt text) -> (WalletResult);
  record_spending : (nat64, text, text, opt text) -> (Result);
  get_spending_history : (opt nat64) -> (SpendingHistoryResult) query;
  get_spending_analysis : () -> (SpendingAnalysisResult) query;
  get_safety_alerts : () -> (SafetyAlertsResult) query;
  acknowledge_safety_alert : (text) -> (Result);
  add_trust_connection : (principal, text, nat32) -> (Result);
  get_trust_connections : () -> (TrustConnectionsResult) query;
  update_wallet_settings : (opt nat64, opt nat64, opt nat64, opt text) -> (Result);
  get_wallet_stats : () -> (WalletStats) query;
}
